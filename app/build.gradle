apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda' //retrolambda 插件声明 设置说明：http://www.open-open.com/lib/view/open1433898197176.html
android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    defaultConfig {
        applicationId "com.vincent.julie"
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    retrolambda {
        println("JAVA_HOME: " + System.getenv("JAVA_HOME"))
        println("JAVA7_HOME: " + System.getenv("JAVA7_HOME"))
        println("JAVA8_HOME: " + System.getenv("JAVA8_HOME"))
        javaVersion JavaVersion.VERSION_1_7
    }
    /**
     * 加入compileOptions,这会让IDE使用用JAVA8语法解析
     */
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    /**
     * 指定将源码编译的级别,，使用下列代码，会将代码编译到兼容1.6的字节码格式
     */
    retrolambda {
        javaVersion JavaVersion.VERSION_1_6
    }
    sourceSets{
        main{
            jniLibs.srcDirs = ['libs']
        }
    }
    lintOptions{
        abortOnError false
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //butterknife 注解 配置参考：http://blog.csdn.net/pkandroid/article/details/51959548
    apt 'com.jakewharton:butterknife-compiler:8.4.0'
    compile 'com.jakewharton:butterknife:8.4.0'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.android.support:support-v4:24.2.0'
    testCompile 'junit:junit:4.12'
    //volley
    compile 'com.navercorp.volleyextensions:volley-views:2.0.1'
    //MD5加密
    compile 'org.apache.servicemix.bundles:org.apache.servicemix.bundles.commons-codec:1.3_5'
    //权限适配，android6.0之后的
    compile 'com.github.hotchemi:permissionsdispatcher:2.1.3'
    apt 'com.github.hotchemi:permissionsdispatcher-processor:2.1.3'
    //二维码扫描库
    compile project(path: ':libqrcode')
    //图片加载缓存库
    //    compile 'com.squareup.picasso:picasso:2.3.2'
    //    compile files('libs/universal-image-loader-1.9.3.jar')
    //    图片加载图、包括本地图片，网络图片
    //    compile 'com.facebook.fresco:fresco:0.13.0'
    //    compile 'com.facebook.fresco:animated-base-support:0.12.0'
    // 在 API < 14 上的机器支持 WebP 时，需要添加
    //    compile 'com.facebook.fresco:animated-gif:0.12.0'
    // 支持 GIF 动图，需要添加
    //    compile 'com.facebook.fresco:animated-webp:0.12.0'
    // 支持 WebP （静态图+动图），需要添加
    //    compile 'com.facebook.fresco:webpsupport:0.12.0'
    //    compile 'com.facebook.fresco:webpsupport:0.12.0'
    //图片选择库，使用说明：github:https://github.com/crazycodeboy/TakePhoto https://github.com/crazycodeboy/TakePhoto/blob/master/README.md
    compile 'com.jph.takephoto:takephoto_library:3.0.0'
    //glide比Picasso占用内存更小，加载速度更快，默认图片加载的质量不如Picasso glide默认为RGB565  Picasso默认为ARGB8888
    //google推荐的图片加载库，介绍：http://blog.csdn.net/fancylovejava/article/details/44747759
    //    Glide.with(context)
    //            .load("http://inthecheesefactory.com/uploads/source/glidepicasso/cover.jpg")
    //            .into(ivImg);
    compile 'com.github.bumptech.glide:glide:3.7.0'
    //Retrolambda的使用 设置说明：http://www.open-open.com/lib/view/open1433898197176.html
    compile 'me.tatarka:gradle-retrolambda:3.3.0'
    //Android开发之RxJava和RxAndroid RxJava说明:http://gank.io/post/560e15be2dca930e00da1083#toc_1
    compile 'io.reactivex:rxjava:1.2.1'
    compile 'io.reactivex:rxandroid:1.2.1'
    //retrofit网络访问框架
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    //    compile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta2'
    //OkGo网络访问框架
    compile 'com.lzy.net:okgo:+'
    //版本号使用 + 可以自动引用最新版  okgo使用的okhttp的版本是最新的 3.4.1 版本，和以前的 2.x 的版本可能会存在冲突。
    compile 'com.lzy.net:okrx:+'
    //版本号使用 + 可以自动引用最新版 okrx是基于RxJava和RxAndroid的扩展,如果不需要可以不必引入
    compile 'com.lzy.net:okserver:+'
    //版本号使用 + 可以自动引用最新版 okserver是对okgo的扩展，统一了下载管理和上传管理，对项目有需要做统一下载的可以考虑使用该扩展，不需要的可以直接使用okgo即可。
    //对于缓存模式使用，需要与返回对象相关的所有javaBean必须实现Serializable接口，否者会报NotSerializableException。
    //使用缓存时，如果不指定cacheKey，默认是用url带参数的全路径名为cacheKey。
    //使用该网络框架时，必须要在 Application 中做初始化 OkGo.init(this);。
    //极光推送
    //    compile 'cn.jiguang:jpush:2.1.8'
   //    compile files('libs/jpush-android-2.2.0.jar')
    compile 'de.hdodenhof:circleimageview:2.1.0'//圆形头像  https://github.com/hdodenhof/CircleImageView
}
